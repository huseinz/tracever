//outline of the parser's grammar 

//definition of alternating automaton
Automata ::=
	epsilon
	| < v, Automata, f >
	| Automata && Automata
	| Automata || Automata


//LTL parser grammar 

ltl_parser:
	automata
	;

automaton:
	IDENTIFIER
	| GLOBAL automaton
	| FUTURE automaton
	| NOT automaton
	| automaton UNTIL automaton
	| automaton AND automaton
	| automaton OR automaton
	| automaton IMPLIES automaton
	| IDENTIFIER COMPARATOR REAL
//	| IDENTIFIER COMPARATOR IDENTIFIER
//	| IDENTIFIER ARITHMETIC IDENTIFIER
	| '(' automaton ')'
	;


