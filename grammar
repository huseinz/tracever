//outline of the parser's grammar 

//definition of alternating automaton
Automata ::=
	epsilon
	| < v, Automata, f >
	| Automata && Automata
	| Automata || Automata


//LTL parser grammar 

ltl_parser:
	automata
	;

automata:
	ltlformula
	| automata AND automata
	| automata OR automata
	;

ltlformula:
	IDENTIFIER
	| GLOBAL ltlformula
	| FUTURE ltlformula
	| NOT ltlformula
	| ltlformula UNTIL ltlformula
	| ltlformula AND ltlformula
	| ltlformula OR ltlformula
	| ltlformula IMPLIES ltlformula
	| IDENTIFIER COMPARATOR REAL
	| '(' ltlformula ')'
	;


